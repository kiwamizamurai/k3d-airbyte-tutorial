---
# Source: airbyte/charts/worker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airbyte-worker
  namespace: airbyte
  labels:
    app.kubernetes.io/name: worker
    app.kubernetes.io/instance: airbyte
    app.kubernetes.io/version: "0.53.1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
      app.kubernetes.io/instance: airbyte
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker
        app.kubernetes.io/instance: airbyte
    spec:
      serviceAccountName: airbyte-admin
      automountServiceAccountToken: true
      containers:
      - name: airbyte-worker-container
        image: airbyte/worker:0.53.1
        imagePullPolicy: "IfNotPresent"
        env:
        - name: AIRBYTE_VERSION
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: AIRBYTE_VERSION
        - name: CONFIG_ROOT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: CONFIG_ROOT
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: DATABASE_PORT
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
                name: airbyte-airbyte-secrets
                key: DATABASE_PASSWORD
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: DATABASE_URL
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: airbyte-airbyte-secrets
              key: DATABASE_USER
        - name: LOG4J_CONFIGURATION_FILE
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: LOG4J_CONFIGURATION_FILE
        - name: MICROMETER_METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: MICROMETER_METRICS_ENABLED
        - name: MICROMETER_METRICS_STATSD_FLAVOR
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: MICROMETER_METRICS_STATSD_FLAVOR
        - name: SEGMENT_WRITE_KEY
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: SEGMENT_WRITE_KEY
        - name: STATSD_HOST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: STATSD_HOST
        - name: STATSD_PORT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: STATSD_PORT
        - name: TRACKING_STRATEGY
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: TRACKING_STRATEGY
        - name: WORKSPACE_DOCKER_MOUNT
          value: workspace
        - name: WORKSPACE_ROOT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: WORKSPACE_ROOT
        - name: LOCAL_ROOT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: LOCAL_ROOT
        - name: WEBAPP_URL
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: WEBAPP_URL
        - name: TEMPORAL_HOST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: TEMPORAL_HOST
        - name: TEMPORAL_WORKER_PORTS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: TEMPORAL_WORKER_PORTS
        - name: LOG_LEVEL
          value: "INFO"
        - name: JOB_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JOB_KUBE_SERVICEACCOUNT
          value: airbyte-admin
        - name: JOB_MAIN_CONTAINER_CPU_REQUEST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: JOB_MAIN_CONTAINER_CPU_REQUEST
        - name: JOB_MAIN_CONTAINER_CPU_LIMIT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: JOB_MAIN_CONTAINER_CPU_LIMIT
        - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
        - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
        - name: INTERNAL_API_HOST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: INTERNAL_API_HOST
        - name: WORKLOAD_API_HOST
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: WORKLOAD_API_HOST
        - name: WORKLOAD_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: airbyte-airbyte-secrets
              key: WORKLOAD_API_BEARER_TOKEN
        - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
        - name: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
        - name: METRIC_CLIENT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: METRIC_CLIENT
        - name: OTEL_COLLECTOR_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: OTEL_COLLECTOR_ENDPOINT
        - name: ACTIVITY_MAX_ATTEMPT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: ACTIVITY_MAX_ATTEMPT
        - name: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS
        - name: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS
        - name: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: WORKFLOW_FAILURE_RESTART_DELAY_SECONDS
        - name: AUTO_DETECT_SCHEMA
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: AUTO_DETECT_SCHEMA
        - name: SHOULD_RUN_NOTIFY_WORKFLOWS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: SHOULD_RUN_NOTIFY_WORKFLOWS
        - name: MICRONAUT_ENVIRONMENTS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: WORKERS_MICRONAUT_ENVIRONMENTS

        # SECRETS MANAGER
        - name: SECRET_PERSISTENCE
          value: 
        # Values for awsSecretManager

        # Values for googleSecretManager secrets

        # Values for vault secrets

        # STORAGE
        - name: STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: STORAGE_TYPE
        - name: STORAGE_BUCKET_LOG
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: STORAGE_BUCKET_LOG
        - name: STORAGE_BUCKET_STATE
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: STORAGE_BUCKET_STATE
        - name: STORAGE_BUCKET_WORKLOAD_OUTPUT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: STORAGE_BUCKET_WORKLOAD_OUTPUT

        # local

        # S3
        - name: S3_PATH_STYLE_ACCESS
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: S3_PATH_STYLE_ACCESS

        # MINIO # default behavior if none supplied is internal minio deployment
        # this is for the internally deployed minio
        - name: AWS_ACCESS_KEY_ID # todo: change to MINIO_ACCESS_KEY_ID, changes need to be pushed to the applications.yaml files
          valueFrom:
            secretKeyRef:
              name: airbyte-airbyte-secrets
              key: DEFAULT_MINIO_ACCESS_KEY
        - name: AWS_SECRET_ACCESS_KEY # todo: change to MINIO_SECRET_ACCESS_KEY, changes need to be pushed to the applications.yaml files
          valueFrom:
            secretKeyRef:
              name: airbyte-airbyte-secrets
              key: DEFAULT_MINIO_SECRET_KEY
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: MINIO_ENDPOINT

        #GCS
        # Values from secret

        # Values from env
        - name: CONTAINER_ORCHESTRATOR_ENABLED
          value: "true"

        # Values from extraEnv for more compability(if you want to use external secret source or other stuff)
        livenessProbe:
          httpGet:
            path: /
            port: heartbeat
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: heartbeat
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        ports:
        - name: heartbeat
          containerPort: 9000 # for heartbeat server
        - containerPort: 9001 # start temporal worker port pool
        - containerPort: 9002
        - containerPort: 9003
        - containerPort: 9004
        - containerPort: 9005
        - containerPort: 9006
        - containerPort: 9007
        - containerPort: 9008
        - containerPort: 9009
        - containerPort: 9010
        - containerPort: 9011
        - containerPort: 9012
        - containerPort: 9013
        - containerPort: 9014
        - containerPort: 9015
        - containerPort: 9016
        - containerPort: 9017
        - containerPort: 9018
        - containerPort: 9019
        - containerPort: 9020
        - containerPort: 9021
        - containerPort: 9022
        - containerPort: 9023
        - containerPort: 9024
        - containerPort: 9025
        - containerPort: 9026
        - containerPort: 9027
        - containerPort: 9028
        - containerPort: 9029
        - containerPort: 9030 # end temporal worker port pool
        resources:
          limits: {}
          requests: {}
        volumeMounts:
      volumes: