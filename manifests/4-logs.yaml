---
# Source: airbyte/templates/minio.yaml
apiVersion: v1
kind: Service
metadata:
  name: airbyte-minio-svc
  namespace: airbyte
  labels:
    app.kubernetes.io/name: airbyte-minio
    app.kubernetes.io/instance: airbyte
    app.kubernetes.io/version: "0.53.1"
spec:
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app.kubernetes.io/name: airbyte-minio
    app.kubernetes.io/instance: airbyte
---
# Source: airbyte/templates/minio.yaml
apiVersion: v1
kind: Pod
metadata:
  name: airbyte-minio-create-bucket
  namespace: airbyte
spec:
  restartPolicy: OnFailure
  containers:
    - name: minio-mc
      image: minio/mc
      command: ["/bin/sh", "-c",
        "until (/usr/bin/mc config host add myminio $MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY) do echo '...waiting...' && sleep 1; done;
          /usr/bin/mc mb --ignore-existing myminio/state-storage;
          /usr/bin/mc policy set public myminio/state-storage;
          /usr/bin/mc mb --ignore-existing myminio/airbyte-dev-logs;
          /usr/bin/mc policy set public myminio/airbyte-dev-logs;"]
      env:
        # this is for the internally deployed minio
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: airbyte-airbyte-secrets
              key: DEFAULT_MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airbyte-airbyte-secrets
              key: DEFAULT_MINIO_SECRET_KEY
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: airbyte-airbyte-env
              key: MINIO_ENDPOINT
---
# Source: airbyte/templates/minio.yaml
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: StatefulSet
metadata:
  name: airbyte-minio
  namespace: airbyte
  labels:
    app.kubernetes.io/name: airbyte-minio
    app.kubernetes.io/instance: airbyte
    app.kubernetes.io/version: "0.53.1"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: airbyte-minio
      app.kubernetes.io/instance: airbyte
  serviceName: airbyte-minio-svc
  volumeClaimTemplates:
      - metadata:
          name: airbyte-minio-pv-claim
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 500Mi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airbyte-minio
        app.kubernetes.io/instance: airbyte
    spec:
      # Refer to the PVC created earlier
      containers:
        - name: airbyte-minio
          # Pulls the default Minio image from Docker Hub
          image: "minio/minio:RELEASE.2023-11-20T22-40-07Z"
          args:
            - server
            - /storage
          env:
            # Minio access key and secret key. This must match the S3_ACCESS_KEY_ID and S3_SECRET_ACCESS_KEY declared in /dev/.env.
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: airbyte-airbyte-secrets
                  key: DEFAULT_MINIO_ACCESS_KEY
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airbyte-airbyte-secrets
                  key: DEFAULT_MINIO_SECRET_KEY
          ports:
            - containerPort: 9000
          # Mount the volume into the pod
          volumeMounts:
            - name: airbyte-minio-pv-claim # must match the volume name, above
              mountPath: "/storage"
